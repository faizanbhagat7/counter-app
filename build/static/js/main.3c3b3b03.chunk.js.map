{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","_useState","useState","_useState2","Object","slicedToArray","count","setCount","react_default","a","createElement","Fragment","Container","Head","id","Title","Buttons","className","onClick","sessionStorage","setItem","document","getElementById","innerHTML","getItem","styled","div","_templateObject","taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0"],"mappings":"wPAuEeA,SAnEH,WAAM,IAAAC,EACUC,mBAAS,GADnBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTK,EADSH,EAAA,GACFI,EADEJ,EAAA,GAYhB,OACEK,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACE,EAAD,KAEEJ,EAAAC,EAAAC,cAACG,EAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKI,GAAG,QACNN,EAAAC,EAAAC,cAAA,yCAKJF,EAAAC,EAAAC,cAACK,EAAD,sCAA4BT,GAE5BE,EAAAC,EAAAC,cAACM,EAAD,CAASF,GAAG,WACVN,EAAAC,EAAAC,cAAA,UAAQO,UAAU,YAChBC,QAAS,WACPX,EAASD,EAAQ,KAFrB,iBAOAE,EAAAC,EAAAC,cAAA,UAAQO,UAAU,YAChBC,QAAS,WACPX,EAAS,KAFb,SAOAC,EAAAC,EAAAC,cAAA,UAAQO,UAAU,YAChBC,QAAS,WACPX,EAASD,EAAQ,KAFrB,kBASFE,EAAAC,EAAAC,cAAA,OAAKI,GAAG,QACNN,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAA,UAAQI,GAAG,OAAOI,QAjDf,WACXC,eAAeC,QAAQ,QAASd,GAExBe,SAASC,eAAe,KAC9BC,UAAYJ,eAAeK,QAAQ,WA6C7B,UAMJhB,EAAAC,EAAAC,cAACK,EAAD,KACG,IADH,iCAEsBP,EAAAC,EAAAC,cAAA,QAAMI,GAAG,KAAT,UASxBF,EAAYa,IAAOC,IAAVC,MAAAvB,OAAAwB,EAAA,EAAAxB,CAAA,QAETW,EAAQU,IAAOC,IAAVG,MAAAzB,OAAAwB,EAAA,EAAAxB,CAAA,iSAWLY,EAAUS,IAAOC,IAAVI,MAAA1B,OAAAwB,EAAA,EAAAxB,CAAA,kjBA2BPS,EAAOY,IAAOC,IAAVK,MAAA3B,OAAAwB,EAAA,EAAAxB,CAAA,oDCrGK4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDdY,IAASC,OACPtC,EAAAC,EAAAC,cAACF,EAAAC,EAAMsC,WAAP,KACEvC,EAAAC,EAAAC,cAACsC,EAAD,OAEF3B,SAASC,eAAe,SAM1BU","file":"static/js/main.3c3b3b03.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [count, setCount] = useState(0);\n\n  const Save = () => {\n    sessionStorage.setItem(\"count\", count);\n\n    let p = document.getElementById(\"p\");\n    p.innerHTML = sessionStorage.getItem(\"count\");\n\n\n  };\n\n  return (\n    <>\n      <Container>\n\n        <Head>\n          <div id='head'>\n            <p>‚ùÑ Counter App ‚ùÑ </p>\n          </div>\n        </Head>\n\n\n        <Title> üöÄ Current Count : {count}</Title>\n\n        <Buttons id='buttons'>\n          <button className=\"changebtn\"\n            onClick={() => {\n              setCount(count + 1);\n            }}\n          >\n            Increase by 1\n          </button>\n          <button className=\"changebtn\"\n            onClick={() => {\n              setCount(0);\n            }}\n          >\n            Reset\n          </button>\n          <button className=\"changebtn\"\n            onClick={() => {\n              setCount(count - 1);\n            }}\n          >\n            Decrease by 1\n          </button>\n        </Buttons>\n\n        <div id='sbtn'>\n          <div>\n\n            <button id=\"save\" onClick={Save}>\n              Save\n            </button>\n          </div>\n        </div>\n\n        <Title>\n          {\" \"}\n          üöÄ Previous Count : <span id=\"p\">0</span>\n        </Title>\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n\nconst Container = styled.div``;\n\nconst Title = styled.div`\n  text-align: center;\n  font-size: 3rem;\n  font-family: apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\n    Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n  font-weight: 900;\n  font-style: italic;\n  letter-spacing: 0.1em;\n  margin-top: 2rem;\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  justify-content: space-around;\n  margin: auto;\n  margin-top: 100px;\n\n  button {\n    width: 200px;\n    height: 50px;\n    border-radius: 5px;\n    border: none;\n    background-color: #f5f5f5;\n    font-size: 1.3rem;\n    font-family: apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\n      Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n    font-weight: 900;\n    font-style: italic;\n    letter-spacing: 0.1em;\n    cursor: pointer;\n  }\n\n  button:hover {\n    background-color: #e5e5e5;\n  }\n`;\n\n\nconst Head = styled.div`\ndisplay:flex;\njustify-content:center;\n\n`\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}